<?xml version="1.0" encoding="utf-8" ?>
<beans>
<!--    <bean id="userDao" class="com.yu.springframework.test.bean.UserDao" init-method="initDataMethod" destroy-method="destroyDataMethod"/>-->
    <bean id="userService" class="com.yu.springframework.test.bean.UserService"/>
    <bean class="com.yu.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    <bean id="beforeAdvice" class="com.yu.springframework.test.bean.UserServiceBeforeAdvice"/>
    <bean id="methodInterceptor" class="com.yu.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>
    <bean id="pointcutAdvisor" class="com.yu.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* com.yu.springframework.test.bean.IUserService.*(..))"/>
        <property name="advice" ref="methodInterceptor"/>
    </bean>
<!--        <property name="uId" value="10001"/>-->
<!--        <property name="location" value="深圳"/>-->
<!--        <property name="company" value="腾讯"/>-->
<!--        <property name="userDao" ref="proxyUserDao"/>-->
<!--    </bean>-->
<!--    <bean id="proxyUserDao" class="com.yu.springframework.test.bean.ProxyBeanFactory"/>-->
<!--    <bean class="com.yu.springframework.test.event.ContextRefreshedEventListener"/>-->
<!--    <bean class="com.yu.springframework.test.event.CustomEventListener"/>-->
<!--    <bean class="com.yu.springframework.test.event.ContextClosedEventListener"/>-->
</beans>
